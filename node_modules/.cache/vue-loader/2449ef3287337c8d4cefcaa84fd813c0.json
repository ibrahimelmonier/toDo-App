{"remainingRequest":"C:\\xampp\\htdocs\\toDo-App\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\xampp\\htdocs\\toDo-App\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\toDo-App\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\toDo-App\\src\\components\\toDoItem.vue?vue&type=template&id=be34efae&","dependencies":[{"path":"C:\\xampp\\htdocs\\toDo-App\\src\\components\\toDoItem.vue","mtime":1563804563615},{"path":"C:\\xampp\\htdocs\\toDo-App\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1563784835229},{"path":"C:\\xampp\\htdocs\\toDo-App\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1563784860285},{"path":"C:\\xampp\\htdocs\\toDo-App\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1563784835229},{"path":"C:\\xampp\\htdocs\\toDo-App\\node_modules\\vue-loader\\lib\\index.js","mtime":1563784860283}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"todo-item\" }, [\n    _c(\"div\", { staticClass: \"todo-item-left\" }, [\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.completed,\n            expression: \"completed\"\n          }\n        ],\n        attrs: { type: \"checkbox\" },\n        domProps: {\n          checked: Array.isArray(_vm.completed)\n            ? _vm._i(_vm.completed, null) > -1\n            : _vm.completed\n        },\n        on: {\n          change: [\n            function($event) {\n              var $$a = _vm.completed,\n                $$el = $event.target,\n                $$c = $$el.checked ? true : false\n              if (Array.isArray($$a)) {\n                var $$v = null,\n                  $$i = _vm._i($$a, $$v)\n                if ($$el.checked) {\n                  $$i < 0 && (_vm.completed = $$a.concat([$$v]))\n                } else {\n                  $$i > -1 &&\n                    (_vm.completed = $$a\n                      .slice(0, $$i)\n                      .concat($$a.slice($$i + 1)))\n                }\n              } else {\n                _vm.completed = $$c\n              }\n            },\n            _vm.doneEdit\n          ]\n        }\n      }),\n      !_vm.editing\n        ? _c(\n            \"div\",\n            {\n              staticClass: \"todo-item-label\",\n              class: { completed: _vm.completed },\n              on: { dblclick: _vm.editTodo }\n            },\n            [_vm._v(_vm._s(_vm.title))]\n          )\n        : _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.title,\n                expression: \"title\"\n              },\n              { name: \"focus\", rawName: \"v-focus\" }\n            ],\n            staticClass: \"todo-item-edit\",\n            attrs: { type: \"text\" },\n            domProps: { value: _vm.title },\n            on: {\n              blur: _vm.doneEdit,\n              keyup: [\n                function($event) {\n                  if (\n                    !$event.type.indexOf(\"key\") &&\n                    _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                  ) {\n                    return null\n                  }\n                  return _vm.doneEdit($event)\n                },\n                function($event) {\n                  if (\n                    !$event.type.indexOf(\"key\") &&\n                    _vm._k($event.keyCode, \"esc\", 27, $event.key, [\n                      \"Esc\",\n                      \"Escape\"\n                    ])\n                  ) {\n                    return null\n                  }\n                  return _vm.cancelEdit($event)\n                }\n              ],\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.title = $event.target.value\n              }\n            }\n          })\n    ]),\n    _c(\n      \"div\",\n      {\n        staticClass: \"remove-item\",\n        on: {\n          click: function($event) {\n            return _vm.removeTodo(_vm.id)\n          }\n        }\n      },\n      [_vm._v(\"\\n        Ã—\\n    \")]\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}