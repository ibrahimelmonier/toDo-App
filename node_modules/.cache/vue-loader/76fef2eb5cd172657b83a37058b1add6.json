{"remainingRequest":"C:\\xampp\\htdocs\\toDo-App\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\xampp\\htdocs\\toDo-App\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\toDo-App\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\toDo-App\\src\\components\\toDoList.vue?vue&type=template&id=aa29ff98&","dependencies":[{"path":"C:\\xampp\\htdocs\\toDo-App\\src\\components\\toDoList.vue","mtime":1563799036567},{"path":"C:\\xampp\\htdocs\\toDo-App\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1563784835229},{"path":"C:\\xampp\\htdocs\\toDo-App\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1563784860285},{"path":"C:\\xampp\\htdocs\\toDo-App\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1563784835229},{"path":"C:\\xampp\\htdocs\\toDo-App\\node_modules\\vue-loader\\lib\\index.js","mtime":1563784860283}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.newTodo,\n            expression: \"newTodo\"\n          }\n        ],\n        staticClass: \"todo-input\",\n        attrs: { type: \"text\", placeholder: \"What needs to be done\" },\n        domProps: { value: _vm.newTodo },\n        on: {\n          keyup: function($event) {\n            if (\n              !$event.type.indexOf(\"key\") &&\n              _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n            ) {\n              return null\n            }\n            return _vm.addTodo($event)\n          },\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.newTodo = $event.target.value\n          }\n        }\n      }),\n      _c(\n        \"transition-group\",\n        {\n          attrs: {\n            name: \"fade\",\n            \"enter-active-class\": \"animated fadeInUp\",\n            \"leave-active-class\": \"animated fadeOutDown\"\n          }\n        },\n        _vm._l(_vm.todosFiltered, function(todo) {\n          return _c(\"toDoItem\", {\n            key: todo.id,\n            attrs: { todo: todo, checkAll: !_vm.leftTodo }\n          })\n        }),\n        1\n      ),\n      _c(\"div\", { staticClass: \"extra\" }, [\n        _c(\"div\", [\n          _c(\"label\", [\n            _c(\"input\", {\n              attrs: { type: \"checkbox\" },\n              domProps: { checked: !_vm.leftTodo },\n              on: { change: _vm.checkAllTodos }\n            }),\n            _vm._v(\"\\n                Check All\\n            \")\n          ])\n        ]),\n        _c(\"div\", [\n          _vm._v(\"\\n            \" + _vm._s(_vm.left) + \" items left\\n        \")\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"extra\" }, [\n        _c(\"div\", [\n          _c(\n            \"button\",\n            {\n              class: { active: _vm.filter == \"all\" },\n              on: {\n                click: function($event) {\n                  _vm.filter = \"all\"\n                }\n              }\n            },\n            [_vm._v(\"All\")]\n          ),\n          _c(\n            \"button\",\n            {\n              class: { active: _vm.filter == \"active\" },\n              on: {\n                click: function($event) {\n                  _vm.filter = \"active\"\n                }\n              }\n            },\n            [_vm._v(\"Active\")]\n          ),\n          _c(\n            \"button\",\n            {\n              class: { active: _vm.filter == \"completed\" },\n              on: {\n                click: function($event) {\n                  _vm.filter = \"completed\"\n                }\n              }\n            },\n            [_vm._v(\"Completed\")]\n          )\n        ]),\n        _c(\n          \"div\",\n          [\n            _c(\"transition\", { attrs: { name: \"fade\" } }, [\n              _vm.showClear\n                ? _c(\"button\", { on: { click: _vm.clearCompleted } }, [\n                    _vm._v(\"Clear Completed\")\n                  ])\n                : _vm._e()\n            ])\n          ],\n          1\n        )\n      ])\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}