{"remainingRequest":"C:\\xampp\\htdocs\\toDo-App\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\toDo-App\\src\\components\\toDoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\toDo-App\\src\\components\\toDoList.vue","mtime":1563799179114},{"path":"C:\\xampp\\htdocs\\toDo-App\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1563784835229},{"path":"C:\\xampp\\htdocs\\toDo-App\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1563784859974},{"path":"C:\\xampp\\htdocs\\toDo-App\\node_modules\\babel-loader\\lib\\index.js","mtime":1563784834198},{"path":"C:\\xampp\\htdocs\\toDo-App\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1563784835229},{"path":"C:\\xampp\\htdocs\\toDo-App\\node_modules\\vue-loader\\lib\\index.js","mtime":1563784860283}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ToDoItem from './toDoItem.vue';\n\nexport default {\n    name: 'ToDoList',\n    components: {\n        ToDoItem,\n    },\n    // props: {\n    //     msg: String\n    // },\n    data() {\n        return {\n            newTodo: '',\n            idForTodo: 5,\n            beforeEdit: '',\n            filter: 'all',\n            todos: [\n                {\n                    'id': 1,\n                    'title': 'Learn Vue',\n                    'completed': false,\n                    'editing': false\n                },{\n                    'id': 2,\n                    'title': 'Learn Vue with Laravel',\n                    'completed': false,\n                    'editing': false\n                },\n            ]\n        }\n    },\n    created() {\n        eventBus.$on('removedTodo', (id) => this.removeTodo(id));\n        eventBus.$on('finishedEdit', (data) => this.finishedEdit(data));\n    },\n    computed: {\n        left() {\n            return this.todos.filter(todo => !todo.completed).length\n        },\n        leftTodo() {\n            return  this.left != 0\n        },\n        todosFiltered() {\n            if(this.filter == 'all') {\n               return this.todos\n            } else if (this.filter == 'active') {\n                return this.todos.filter(todo => !todo.completed)\n            } else if (this.filter == 'completed') {\n                return this.todos.filter(todo => todo.completed)\n            }\n        },\n        showClear() {\n            return this.todos.filter(todo => todo.completed).length > 0\n        }\n    },\n    methods: {\n        addTodo() {\n            if (this.newTodo.trim().length == 0) {\n                return\n            }\n            this.todos.push({\n                id: this.idForTodo,\n                title: this.newTodo,\n                completed: false\n            })\n            this.newTodo = ''\n            this.idForTodo++\n        },\n        removeTodo(id) {\n            const index = this.todos.findIndex((item) => item.id == id);\n            this.todos.splice(index, 1)\n        },\n        checkAllTodos() {\n            this.todos.forEach((todo) => todo.completed = event.target.checked)\n        },\n        clearCompleted() {\n            this.todos = this.todos.filter(todo => !todo.completed)\n        },\n        finishedEdit(data) {\n            const index = this.todos.findIndex((item) => item.id == data.id);\n            this.todos.splice(index, 1, data)\n        }\n    }\n}\n",{"version":3,"sources":["toDoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"toDoList.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n        <input type=\"text\" class=\"todo-input\" placeholder=\"What needs to be done\" v-model=\"newTodo\" @keyup.enter=\"addTodo\">\r\n        <transition-group name=\"fade\" enter-active-class=\"animated fadeInUp\" leave-active-class=\"animated fadeOutDown\">\r\n            <toDoItem v-for=\"(todo) in todosFiltered\" :key=\"todo.id\" :todo=\"todo\" :checkAll=\"!leftTodo\">\r\n            </toDoItem>\r\n        </transition-group>\r\n\r\n        <div class=\"extra\">\r\n            <div>\r\n                <label>\r\n                    <input type=\"checkbox\" :checked=\"!leftTodo\" @change=\"checkAllTodos\">\r\n                    Check All\r\n                </label>\r\n            </div>\r\n            <div>\r\n                {{ left }} items left\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"extra\">\r\n            <div>\r\n                <button :class=\"{active : filter == 'all'}\" @click=\"filter = 'all'\">All</button>\r\n                <button :class=\"{active : filter == 'active'}\" @click=\"filter = 'active'\">Active</button>\r\n                <button :class=\"{active : filter == 'completed'}\" @click=\"filter = 'completed'\">Completed</button>\r\n            </div>\r\n\r\n            <div>\r\n                <transition name=\"fade\">\r\n                    <button v-if=\"showClear\" @click=\"clearCompleted\">Clear Completed</button>\r\n                </transition>\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import ToDoItem from './toDoItem.vue';\r\n\r\n    export default {\r\n        name: 'ToDoList',\r\n        components: {\r\n            ToDoItem,\r\n        },\r\n        // props: {\r\n        //     msg: String\r\n        // },\r\n        data() {\r\n            return {\r\n                newTodo: '',\r\n                idForTodo: 5,\r\n                beforeEdit: '',\r\n                filter: 'all',\r\n                todos: [\r\n                    {\r\n                        'id': 1,\r\n                        'title': 'Learn Vue',\r\n                        'completed': false,\r\n                        'editing': false\r\n                    },{\r\n                        'id': 2,\r\n                        'title': 'Learn Vue with Laravel',\r\n                        'completed': false,\r\n                        'editing': false\r\n                    },\r\n                ]\r\n            }\r\n        },\r\n        created() {\r\n            eventBus.$on('removedTodo', (id) => this.removeTodo(id));\r\n            eventBus.$on('finishedEdit', (data) => this.finishedEdit(data));\r\n        },\r\n        computed: {\r\n            left() {\r\n                return this.todos.filter(todo => !todo.completed).length\r\n            },\r\n            leftTodo() {\r\n                return  this.left != 0\r\n            },\r\n            todosFiltered() {\r\n                if(this.filter == 'all') {\r\n                   return this.todos\r\n                } else if (this.filter == 'active') {\r\n                    return this.todos.filter(todo => !todo.completed)\r\n                } else if (this.filter == 'completed') {\r\n                    return this.todos.filter(todo => todo.completed)\r\n                }\r\n            },\r\n            showClear() {\r\n                return this.todos.filter(todo => todo.completed).length > 0\r\n            }\r\n        },\r\n        methods: {\r\n            addTodo() {\r\n                if (this.newTodo.trim().length == 0) {\r\n                    return\r\n                }\r\n                this.todos.push({\r\n                    id: this.idForTodo,\r\n                    title: this.newTodo,\r\n                    completed: false\r\n                })\r\n                this.newTodo = ''\r\n                this.idForTodo++\r\n            },\r\n            removeTodo(id) {\r\n                const index = this.todos.findIndex((item) => item.id == id);\r\n                this.todos.splice(index, 1)\r\n            },\r\n            checkAllTodos() {\r\n                this.todos.forEach((todo) => todo.completed = event.target.checked)\r\n            },\r\n            clearCompleted() {\r\n                this.todos = this.todos.filter(todo => !todo.completed)\r\n            },\r\n            finishedEdit(data) {\r\n                const index = this.todos.findIndex((item) => item.id == data.id);\r\n                this.todos.splice(index, 1, data)\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    @import url(\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.2/animate.min.css\");\r\n    .todo-input {\r\n        width: 100%;\r\n        padding: 10px 18px;\r\n        font-size: 18px;\r\n        margin-bottom: 16px;\r\n        &:focus {\r\n            outline: 0;\r\n            border: 1px solid #42b983;\r\n        }\r\n    }\r\n    .todo-item {\r\n        margin-bottom: 12px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        animation-duration: 0.3s;\r\n    }\r\n    .remove-item {\r\n        cursor: pointer;\r\n        margin-left: 14px;\r\n        &:hover {\r\n            color: black;\r\n        }\r\n    }\r\n    .todo-item-left {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n    .todo-item-label {\r\n        padding: 10px;\r\n        border: 1px solid white;\r\n        margin-left: 12px;\r\n    }\r\n    .todo-item-edit {\r\n        font-size: 24px;\r\n        color: #2c3e50;\r\n        margin-left: 12px;\r\n        width: 100%;\r\n        padding: 10px;\r\n        border: 1px solid #ccc;\r\n        font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n        &:focus {\r\n            outline: none;\r\n            border: 1px solid #42b983;\r\n        }\r\n    }\r\n    .completed {\r\n        text-decoration: line-through;\r\n        color: #42b983;\r\n    }\r\n    .extra {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        font-size: 16px;\r\n        border-top: 1px solid #42b983;\r\n        padding-top: 14px;\r\n        margin-bottom: 14px;\r\n    }\r\n    button {\r\n        color: inherit;\r\n        margin: 3px;\r\n        padding: 3px 7px;\r\n        text-decoration: none;\r\n        border: 1px solid transparent;\r\n        border-radius: 3px;\r\n        &:hover {\r\n            background-color: #42b983;\r\n            color: #fff;\r\n        }\r\n        &:focus {\r\n            outline: none;\r\n            color: #ffffff;\r\n        }\r\n    }\r\n    .active {\r\n        background-color: #42b983;\r\n    }\r\n    .fade-enter-active, .fade-leave-action {\r\n        transition: opacity .2s;\r\n    }\r\n    .fade-enter, .fade-leave-to {\r\n        opacity: 0;\r\n    }\r\n</style>\r\n"]}]}