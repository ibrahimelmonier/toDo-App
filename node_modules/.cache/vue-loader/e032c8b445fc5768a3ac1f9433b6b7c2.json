{"remainingRequest":"C:\\xampp\\htdocs\\toDo-App\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\toDo-App\\src\\components\\toDoItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\toDo-App\\src\\components\\toDoItem.vue","mtime":1563804563615},{"path":"C:\\xampp\\htdocs\\toDo-App\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1563784835229},{"path":"C:\\xampp\\htdocs\\toDo-App\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1563784859974},{"path":"C:\\xampp\\htdocs\\toDo-App\\node_modules\\babel-loader\\lib\\index.js","mtime":1563784834198},{"path":"C:\\xampp\\htdocs\\toDo-App\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1563784835229},{"path":"C:\\xampp\\htdocs\\toDo-App\\node_modules\\vue-loader\\lib\\index.js","mtime":1563784860283}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: \"toDoItem\",\n    props: {\n        todo: {\n            type: Object,\n            required: true,\n        },\n        checkAll: {\n            type: Boolean,\n            required: true,\n        }\n    },\n    data() {\n        return {\n            'id': this.todo.id,\n            'title': this.todo.title,\n            'completed': this.todo.completed,\n            'editing': this.todo.editing,\n            'beforeEdit': '',\n        }\n    },\n    watch: {\n       checkAll() {\n           if(this.checkAll) {\n               this.completed = true\n           }else {\n               this.completed = this.todo.completed\n           }\n        }\n    },\n    directives: {\n        focus: {\n            // directive definition\n            inserted: function (el) {\n                el.focus()\n            }\n        }\n    },\n    methods: {\n        removeTodo(id) {\n            eventBus.$emit('removedTodo', id);\n        },\n        editTodo() {\n            this.beforeEdit = this.title;\n            this.editing = true\n        },\n        doneEdit() {\n            if (this.title.trim().length == 0 && this.title.trim().length == '') {\n                this.title = this.beforeEdit\n            }\n            this.editing = false;\n            eventBus.$emit('finishedEdit', {\n                'id': this.id,\n                'title': this.title,\n                'completed': this.completed,\n                'editing': this.editing,\n            });\n        },\n        cancelEdit() {\n            this.title = this.beforeEdit;\n            this.editing = false\n        },\n    }\n}\n",{"version":3,"sources":["toDoItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"toDoItem.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"todo-item\">\r\n        <div class=\"todo-item-left\">\r\n            <input type=\"checkbox\" v-model=\"completed\" @change=\"doneEdit\">\r\n            <div v-if=\"!editing\" @dblclick=\"editTodo\" class=\"todo-item-label\" :class=\"{ completed : completed }\">{{ title }}</div>\r\n            <input v-else class=\"todo-item-edit\" type=\"text\" v-model=\"title\" @blur=\"doneEdit\" @keyup.enter=\"doneEdit\" @keyup.esc=\"cancelEdit\" v-focus>\r\n        </div>\r\n        <div class=\"remove-item\" @click=\"removeTodo(id)\">\r\n            &times;\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"toDoItem\",\r\n        props: {\r\n            todo: {\r\n                type: Object,\r\n                required: true,\r\n            },\r\n            checkAll: {\r\n                type: Boolean,\r\n                required: true,\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                'id': this.todo.id,\r\n                'title': this.todo.title,\r\n                'completed': this.todo.completed,\r\n                'editing': this.todo.editing,\r\n                'beforeEdit': '',\r\n            }\r\n        },\r\n        watch: {\r\n           checkAll() {\r\n               if(this.checkAll) {\r\n                   this.completed = true\r\n               }else {\r\n                   this.completed = this.todo.completed\r\n               }\r\n            }\r\n        },\r\n        directives: {\r\n            focus: {\r\n                // directive definition\r\n                inserted: function (el) {\r\n                    el.focus()\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            removeTodo(id) {\r\n                eventBus.$emit('removedTodo', id);\r\n            },\r\n            editTodo() {\r\n                this.beforeEdit = this.title;\r\n                this.editing = true\r\n            },\r\n            doneEdit() {\r\n                if (this.title.trim().length == 0 && this.title.trim().length == '') {\r\n                    this.title = this.beforeEdit\r\n                }\r\n                this.editing = false;\r\n                eventBus.$emit('finishedEdit', {\r\n                    'id': this.id,\r\n                    'title': this.title,\r\n                    'completed': this.completed,\r\n                    'editing': this.editing,\r\n                });\r\n            },\r\n            cancelEdit() {\r\n                this.title = this.beforeEdit;\r\n                this.editing = false\r\n            },\r\n        }\r\n    }\r\n</script>\r\n"]}]}